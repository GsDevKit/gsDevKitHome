#! /bin/bash

#=========================================================================
# Copyright (c) 2014 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
# Name - createTodeImage
#
# Purpose - create the tODE client image
#
# Examples
#   createTodeImage -h
#   createTodeImage -p _0
#   createTodeImage
#
#=========================================================================

# help function
function display_help() {
  echo ""
  echo "USAGE: $(basename $0) [-h] [-p <postfix]"
  echo "Create the tODE client image. Used for running pharo-based scripts"
  echo "and for running the tODE client UI."
  echo ""
  echo "OPTIONS"
  echo "  -h "
  echo "    display help"
  echo "  -p <postfix>"
  echo "    Append <postfix> to end of image name. Useful for creating"
  echo "    multiple tode client images."
  echo ""
  echo "EXAMPLES"
  echo "  $(basename $0) -h"
  echo "  $(basename $0) -p _0"
  echo "  $(basename $0)"
  echo ""  
}

postFix=""
while getopts "hp:" OPT ; do
  case "$OPT" in
    h) 
      display_help
      exit 1
      ;;
    p)
      postFix="${OPTARG}"
      ;;
    *)
      display_help
      exit 1
      ;;
  esac
done

if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"
  exit 1
fi

# create tODE client
pharo=$GS_HOME/pharo
if [ -e $pharo/todeClient${postFix}.image ] ; then
  echo "todeClient already installed"
  exit 0
fi

echo "creating todeClient${postFix} image"

$pharo/Pharo.exe --headless $pharo/Pharo3.0.image save todeClientTmp

cat - > $pharo/todeLoad.st << EOF
[ | metacello |
  metacello := Metacello new
    configuration: 'TodeClient';
    version: #release;
    repository: 'filetree://$GS_HOME/repository'.
  metacello copy get.
  metacello copy lock.
  metacello load ]
      on: Warning
      do: [:ex | Transcript cr; show: ex description ].
EOF

$pharo/Pharo.exe --headless $pharo/todeClientTmp.image st --quit --save $pharo/todeLoad.st
if [[ $? != 0 ]] ; then
  echo "createTodeImage[Error]: failed loading tode client"
  exit 1
fi

$pharo/Pharo.exe --headless $pharo/todeClientTmp.image save todeClient${postFix}
if [[ $? != 0 ]] ; then
  echo "createTodeImage[Error]: failed saving tode client"
  rm -f todeClient*
  exit 1
fi

rm -f todeClientTmp.*
echo
echo "tODE client image creation complete"

# End of script
exit 0
