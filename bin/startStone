#! /bin/bash
#=========================================================================
# Copyright (c) 2014, 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "================="

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] -b] [-C] [-N] [-R] [-w <waitstone-timeout>] <stone-name>

 Start the stone process for the given stone.

OPTIONS
  -b
     Start netldi
  -C 
     Startup for conversion.
  -h 
     display help
  -N
     Startup without transaction logs.
  -R
     Startup for restore 
  -w <waitstone-timeout>
     if present wait up to <waitstone-timeout> minutes for the stone to 
     properly start

EXAMPLES
  $(basename $0) -h
  $(basename $0) kit
  $(basename $0) -w 5 kit 

HELP
}

set -e # exit on error
waitTime=""
ARG=""
startnetldi=""
while getopts "bhw:CNR" OPT ; do
  case "$OPT" in
    b) startnetldi="true" ;;
    C) 
      if [ "${ARGS}x" != "x" ] ; then 
        echo "Only one of -C -N or -R options may be specified"
        exit 1
      fi
      ARG="-C"
    ;;
    h) usage; exit 0 ;;
    N)
      if [ "${ARGS}x" != "x" ] ; then 
        echo "Only one of -C -N or -R options may be specified"
        exit 1
      fi
      ARG="-N"
    ;;
    R)
      if [ "${ARGS}x" != "x" ] ; then 
        echo "Only one of -C -N or -R options may be specified"
        exit 1
      fi
      ARG="-R"
    ;;
    w) waitTime="${OPTARG}" ;;
    *) usage; exit 1 ;;
  esac
done
shift $(($OPTIND - 1))

if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"; exit 1
fi

if [ $# -ne 1 ]; then
  usage; exit 1
fi
stoneName=$1
stonePath=$GS_HOME/gemstone/stones/$stoneName

# set up stone environment
pushd $stonePath >& /dev/null
source $stonePath/stone.env
popd >& /dev/null

# start the stone
$GS_HOME/bin/gs/startGemstone $ARG

if [ "${waitTime}x" = "x" ] ; then
  if [ "${GS_TRAVIS}x" != "x" ] ; then
    $stonePath/product/bin/waitstone $GEMSTONE_NAME 2
  fi
else
  $stonePath/product/bin/waitstone $GEMSTONE_NAME $waitTime
fi

if [ "${startnetldi}" = "true" ] ; then
  $GS_HOME/bin/startNetldi $stoneName
fi

echo "...finished $(basename $0)"
