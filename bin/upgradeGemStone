#! /bin/bash
#=========================================================================
# Copyright (c) 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "================="

usage() {
  cat <<HELP
usage: $0 <source-stone-name> <target-stone-name> <gemstone-version>
HELP

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"; exit 1
fi

if [ $# -ne 3 ]; then
  usage; exit 1
fi

sourceStoneName="$1"
targetStoneName="$2"
gsvers="$3"

$GS_HOME/bin/stopStone $sourceStoneName

$GS_HOME/bin/installGemStone $gsvers

$GS_HOME/bin/createStone -f -n -s "$GS_HOME/gemstone/stones/$sourceStoneName/extents/extent0.dbf" \
                         $targetStoneName $gsvers

targetStonePath=$GS_HOME/gemstone/stones/$targetStoneName
pushd $targetStonePath >& /dev/null
source $targetStonePath/stone.env
mkdir upgradeLogDir
cd upgradeLogDir
export upgradeLogDir="$(pwd)"
popd >& /dev/null

startStoneArg=""
if [ $sourceStoneName is 2.4.x ] then
  startStoneArg="-C"
fi

$GS_HOME/bin/startStone $startStoneArg -b -w 5 $targetStoneName

cat <<EOF

This script performs a standard upgrade for the stone $targetStoneName.
This script:

$COPYDBF_DOC
  - starts the stone $GEMSTONE_NAME.
  - runs the upgradeImage script.
  - sets up the Bootstrap globals for the upgradeSeasideImage script.
  - runs the upgradeSeasideImage script.
  - runs an application upgrade script that loads your application code

If an error occurs during execution of this script, the details of the error are
available in the topazerrors.log file.

Press the return key to continue...
EOF
read prompt




# start standard upgrade
echo "STARTING standard upgradeImage "
$GEMSTONE/bin/upgradeImage -s $GEMSTONE_NAME << EOF

EOF
if [ "$?" != "0" ]; then
  echo "ERROR: running upgradeImage. See topazerrors.log for more information"
  exit 1
fi

# setup Bootstrap globals
echo "STARTING setup Bootstrap globals"
$GEMSTONE/bin/topaz -l -T50000 > $upgradeLogDir/topaz.out << EOF
output pushnew $upgradeLogDir/topazBootstrap.out only
set gemstone $GEMSTONE_NAME

display resultcheck
level 0

set user DataCurator pass swordfish
login

display oops
iferr 1 stk
iferr 2 stack
iferr 3 input pop
iferr 4 exit 1

input $BOOTSTRAP_TPZ

commit
logout
output pop
exit 0
EOF
if [ "$?" != "0" ]; then
  echo "ERROR: running topaz to set up Bootstrap globals"
  exit 1
fi

# start "seaside" upgrade to upgrade GLASS to 1.0-beta.9.1
echo "STARTING upgradeSeasideImage"
$GEMSTONE/seaside/bin/upgradeSeasideImage -s $GEMSTONE_NAME << EOF

EOF
if [ "$?" != "0" ]; then
  echo "ERROR: running upgradeImage. See topazerrors.log for more information"
  exit 1
fi

#install application code
echo "STARTING install application code"
$GEMSTONE/bin/topaz -l -T50000 > $upgradeLogDir/topaz.out << EOF
output pushnew $upgradeLogDir/topazApplication.out only
set gemstone $GEMSTONE_NAME

display resultcheck
level 0

set user DataCurator pass swordfish
login

display oops
iferr 1 stk
iferr 2 stack
iferr 3 input pop
iferr 4 exit 1

input $APPLICATION_TPZ

commit
logout
output pop
exit 0
EOF
if [ "$?" != "0" ]; then
  echo "ERROR: running topaz to install application code. See topazerrors.log for more information"
  exit 1
fi

exit 0
